name: mgba-rom-test

on:
  push:
  pull_request:

# permissions:
#   contents: read

env:
  CARGO_TERM_COLOR: always

jobs:
  pass:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: dtolnay/rust-toolchain@nightly
      with:
        components: rust-src
    # Build mGBA ROM test
    # - run: sudo apt-get update && sudo apt-get install --no-install-recommends libavcodec-dev libavformat-dev libswresample-dev libavutil-dev libedit-dev libelf-dev libmagickwand-dev libpng-dev libqt5opengl5-dev libsdl2-dev libsqlite3-dev libswscale-dev libzip-dev qtmultimedia5-dev
    - run: sudo apt-get install binutils-arm-none-eabi
    # - run: mkdir mgba
    # - run: curl -LsSf https://github.com/mgba-emu/mgba/archive/refs/tags/0.10.3.tar.gz | tar xzf - -C mgba
    # - run: cd mgba/mgba-0.10.3 && mkdir build && cd build && cmake -DUSE_LIBZIP=OFF -DBUILD_ROM_TEST=ON -DUSE_PNG=OFF .. && make
    # - run: mv mgba/mgba-0.10.3/include/mgba mgba-rom-test
    # - run: chmod -f 777 mgba-rom-test
    # - run: echo "$GITHUB_WORKSPACE" >> $GITHUB_PATH
    # - run: cd tests/pass && cargo test
    # - run: cd tests/pass && cargo test --no-run
    - name: Build ROM
      id: build_rom
      run: cd tests/pass && cargo test --no-run --message-format=json | tee results.json
    - run: cd tests/parse_executable && cargo run results.json
    # - run: echo "ROM_PATH=hello" >> $GITHUB_OUTPUT
    #   id: build_rom
    - run: echo "$ROM_PATH"
      env:
        ROM_PATH: ${{ env.ROM_PATH }}
    - name: Set the value
      id: step_one
      run: |
          echo "FOO=$(git status)" >> $GITHUB_ENV
    - name: Use the value
      id: step_two
      run: |
          echo "${{ env.FOO }}"
    #   id: rom_path
    # - uses: felixjones/github-mgba-rom-test@v1
    #   with:
    #     swi-call: 0x27
    #     read-register: 'r0'
    #     rom-path: ${{ steps.rom_path.outputs.ROM_PATH }}
    #     success-code: 0  # Pass
