name: mgba-rom-test

on:
  push:
  pull_request:

permissions:
  contents: read

env:
  CARGO_TERM_COLOR: always

jobs:
  pass:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: dtolnay/rust-toolchain@nightly
      with:
        components: rust-src
    - run: sudo apt-get install binutils-arm-none-eabi
    - run: cd tests/pass && cargo test --no-run --message-format=json | tee results.json
    - run: echo "ROM_PATH=$(cd tests/parse_executable && cargo run ../pass/results.json)" >> $GITHUB_ENV
    - run: arm-none-eabi-objcopy -O binary ${{ env.ROM_PATH }} pass.gba
    - run: cargo install gbafix
    - run: gbafix pass.gba
    - uses: felixjones/github-mgba-rom-test@v1
      with:
        swi-call: 0x27
        read-register: 'r0'
        rom-path: pass.gba
        success-code: 0  # Pass

  fail:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: dtolnay/rust-toolchain@nightly
      with:
        components: rust-src
    - run: sudo apt-get install binutils-arm-none-eabi
    - run: cd tests/fail && cargo test --no-run --message-format=json | tee results.json
    - run: echo "ROM_PATH=$(cd tests/parse_executable && cargo run ../fail/results.json)" >> $GITHUB_ENV
    - run: arm-none-eabi-objcopy -O binary ${{ env.ROM_PATH }} fail.gba
    - run: cargo install gbafix
    - run: gbafix fail.gba
    - uses: felixjones/github-mgba-rom-test@v1
      with:
        swi-call: 0x27
        read-register: 'r0'
        rom-path: fail.gba
        success-code: 1  # Fail
